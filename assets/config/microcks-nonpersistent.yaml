kind: Deployment
apiVersion: apps/v1
metadata:
 name: microcks-uber
 labels:
   app: microcks-uber
   app.kubernetes.io/component: microcks-uber
   app.kubernetes.io/instance: microcks-uber
   app.kubernetes.io/name: microcks-uber
   app.kubernetes.io/part-of: microcks-uber-app
   app.openshift.io/runtime: java
spec:
 replicas: 1
 selector:
   matchLabels:
     app: microcks-uber
 template:
   metadata:
     creationTimestamp: null
     labels:
       app: microcks-uber
       deployment: microcks-uber
   spec:
     containers:
       - name: microcks-uber
         image: microcks/microcks-uber:latest
         ports:
           - containerPort: 8080
             protocol: TCP
---

kind: Service
apiVersion: v1
metadata:
 name: microcks-uber
 labels:
   app: microcks-uber
   app.kubernetes.io/component: microcks-uber
   app.kubernetes.io/instance: microcks-uber
   app.kubernetes.io/name: microcks-uber
   app.kubernetes.io/part-of: microcks-uber-app
   app.openshift.io/runtime-version: latest
spec:
 ports:
   - name: 8080-tcp
     protocol: TCP
     port: 8080
     targetPort: 8080
 selector:
   app: microcks-uber
   deployment: microcks-uber
   
---

kind: Route
apiVersion: route.openshift.io/v1
metadata:
 name: microcks-uber
 labels:
   app: microcks-uber
   app.kubernetes.io/component: microcks-uber
   app.kubernetes.io/instance: microcks-uber
   app.kubernetes.io/name: microcks-uber
   app.kubernetes.io/part-of: microcks-uber-app
   app.openshift.io/runtime-version: latest
spec:
 to:
   kind: Service
   name: microcks-uber
   weight: 100
 port:
   targetPort: 8080-tcp
 tls:
   termination: edge
   insecureEdgeTerminationPolicy: Redirect
 wildcardPolicy: None